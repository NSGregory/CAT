"""This is intended to deal with the extensive list of headers in the Noldus Catwalk dataset.  There are approximately
380 columns that could be used.

Use configs.ini to identify an excel file that has the column headings you wish to evaluate listed in a single column.
This should be a subset of the entire dataset generated by Noldus Catwalk.  Any entries that are not column headings for
that dataset will cause errors.  If you wish to use the full set, instead use the dataFrame.columns attribute.

Alternatively, you can use the default CatwalkHeaders.xlsx with an index-based approach.  The index is set based on
the original file list and is vulnerable to changes in the order of headings.  If this breaks, I would recommend using
a custom hand picked """


from configs import Config
import pandas as pd

class headingManager:

    def __init__(self):
        self.configs = Config('configs.ini')
        self.header_in_file = self.configs.headings_csv
        self.index_header_file = self.configs.index_headings_csv
        self.header_out_file = self.configs.headings
        self.coordinates = self.configs #mnemonic for ease of use


    def single_column_heading_list(self):
        """For custom heading list."""
        heading_df = pd.read_excel(self.header_in_file, header=None)
        heading_list = [ x for x in heading_df[0] if x != 'nan']
        return heading_list

    def index_column_heading_list(self):
        """For Index based approach"""
        heading_df = pd.read_excel(self.index_header_file, header=None)
        heading_list = [ x for x in heading_df[0] if x != 'nan']
        return heading_list

    def slicer(self, list):
        """For making coordinates into useable slicer objects.  Coordinates are located in configs.ini in the format of
        nd_variables_of_interest = [x, y] < -- y is meant to be included, thus the +1 on line b
        """
        a = list[0]
        b = list[1]+1
        return slice(a,b,1)



if __name__ == '__main__':
    heading = headingManager()
    coord = heading.coordinates.nd_left_front
    slice = heading.slicer(coord)
    heading_list = heading.single_column_heading_list()
    print(heading_list)
    print(heading_list[slice])







